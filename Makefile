# MCP-Mem0 - Production Memory System
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –ø–∞–º—è—Ç–∏

.PHONY: help install dev prod test clean logs status health
.DEFAULT_GOAL := help

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE_UNIFIED = docker-compose.unified.yml
COMPOSE_FILE_SIMPLE = docker-compose.yml
SERVER_PORT = 8051
PYTHON = python3
PIP = pip3

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)MCP-Mem0 Memory System - Production Ready$(NC)"
	@echo "=================================================="
	@echo ""
	@echo "$(BLUE)üöÄ –†–ï–ñ–ò–ú–´ –ó–ê–ü–£–°–ö–ê:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(BLUE)üìã –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:$(NC)"
	@echo "  make install     # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  make dev        # –ó–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make prod       # –ü–æ–ª–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º"
	@echo "  make memory-only # –¢–æ–ª—å–∫–æ –ø–∞–º—è—Ç—å –±–µ–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
	@echo "  make health     # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	$(PIP) install -r requirements.txt
	$(PIP) install -r requirements_graph.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

dev: ## –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ª–æ–∫–∞–ª—å–Ω–æ)
	@echo "$(GREEN)üõ†Ô∏è –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	$(PYTHON) src/main.py

prod: ## –ü–æ–ª–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–æ –≤—Å–µ–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) --profile monitoring up -d
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞:$(NC)"
	@echo "  - Memory Server: http://localhost:$(SERVER_PORT)"
	@echo "  - Neo4j Browser: http://localhost:7474"
	@echo "  - Grafana: http://localhost:3000"
	@echo "  - Prometheus: http://localhost:9090"

memory-only: ## –¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –±–µ–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
	@echo "$(GREEN)üß† –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) up -d neo4j postgres memory-server redis
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∞:$(NC)"
	@echo "  - Memory Server: http://localhost:$(SERVER_PORT)"
	@echo "  - Neo4j Browser: http://localhost:7474"

graph-only: ## –¢–æ–ª—å–∫–æ –≥—Ä–∞—Ñ –ø–∞–º—è—Ç—å + —Å–µ—Ä–≤–µ—Ä
	@echo "$(GREEN)üï∏Ô∏è –ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ –ø–∞–º—è—Ç–∏...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) up -d neo4j memory-server
	@echo "$(GREEN)‚úÖ –ì—Ä–∞—Ñ –ø–∞–º—è—Ç—å –∑–∞–ø—É—â–µ–Ω–∞:$(NC)"
	@echo "  - Memory Server: http://localhost:$(SERVER_PORT)"
	@echo "  - Neo4j Browser: http://localhost:7474"

simple: ## –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º (–æ—Å–Ω–æ–≤–Ω–æ–π Docker Compose)
	@echo "$(GREEN)‚ö° –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...$(NC)"
	docker-compose -f $(COMPOSE_FILE_SIMPLE) up -d
	@echo "$(GREEN)‚úÖ –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞$(NC)"

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) down
	docker-compose -f $(COMPOSE_FILE_SIMPLE) down
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(RED)üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) down -v --remove-orphans
	docker-compose -f $(COMPOSE_FILE_SIMPLE) down -v --remove-orphans
	docker system prune -f
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞$(NC)"

restart: stop memory-only ## –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø–∞–º—è—Ç–∏
	@echo "$(BLUE)üìã –õ–æ–≥–∏ Memory Server:$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) logs -f memory-server

logs-all: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) logs -f

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) ps

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@echo ""
	@echo "$(YELLOW)Memory Server:$(NC)"
	@curl -s http://localhost:$(SERVER_PORT)/health | jq . || echo "$(RED)‚ùå Memory Server –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "$(YELLOW)Neo4j:$(NC)"
	@curl -s http://localhost:7474 > /dev/null && echo "$(GREEN)‚úÖ Neo4j —Ä–∞–±–æ—Ç–∞–µ—Ç$(NC)" || echo "$(RED)‚ùå Neo4j –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "$(YELLOW)PostgreSQL:$(NC)"
	@docker exec unified-memory-postgres pg_isready -U postgres -d unified_memory > /dev/null 2>&1 && echo "$(GREEN)‚úÖ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç$(NC)" || echo "$(RED)‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	$(PYTHON) -m pytest tests/ -v
	$(PYTHON) test_mcp_tools.py

build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) build

pull: ## –û–±–Ω–æ–≤–∏—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)‚¨áÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) pull

backup: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö
	@echo "$(GREEN)üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...$(NC)"
	mkdir -p backups/$(shell date +%Y%m%d_%H%M%S)
	docker exec unified-memory-neo4j neo4j-admin dump --database=neo4j --to=/var/lib/neo4j/backup.dump
	docker cp unified-memory-neo4j:/var/lib/neo4j/backup.dump backups/$(shell date +%Y%m%d_%H%M%S)/
	docker exec unified-memory-postgres pg_dump -U postgres unified_memory > backups/$(shell date +%Y%m%d_%H%M%S)/postgres_backup.sql
	@echo "$(GREEN)‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ backups/$(shell date +%Y%m%d_%H%M%S)/$(NC)"

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(GREEN)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	black src/
	isort src/

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	flake8 src/
	mypy src/

docs: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(GREEN)üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...$(NC)"
	cd docs && make html

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è CI/CD
ci-test: install test lint ## –ö–æ–º–∞–Ω–¥—ã –¥–ª—è CI pipeline

deploy: build prod health ## –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
monitor: ## –ó–∞–ø—É—Å–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
	@echo "$(GREEN)üìä –ó–∞–ø—É—Å–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º...$(NC)"
	docker-compose -f $(COMPOSE_FILE_UNIFIED) --profile monitoring up -d
	@echo "$(GREEN)‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞:$(NC)"
	@echo "  - Grafana: http://localhost:3000 (admin/admin123)"
	@echo "  - Prometheus: http://localhost:9090"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
	@echo "$(GREEN)‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ MCP-Mem0 System:$(NC)"
	@echo "=================================="
	@echo "$(YELLOW)–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:$(NC)"
	@echo "  - üß† Neo4j Graph Database (–≥—Ä–∞—Ñ–æ–≤—ã–µ —Å–≤—è–∑–∏)"
	@echo "  - üîç PostgreSQL + pgvector (–≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫)" 
	@echo "  - ‚ö° Redis (–∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ)"
	@echo "  - üöÄ FastAPI Memory Server"
	@echo "  - üìä Prometheus + Grafana (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)"
	@echo ""
	@echo "$(YELLOW)–ü–æ—Ä—Ç—ã:$(NC)"
	@echo "  - 8051: Memory Server"
	@echo "  - 7474: Neo4j Browser"
	@echo "  - 5432: PostgreSQL"
	@echo "  - 6379: Redis"
	@echo "  - 3000: Grafana"
	@echo "  - 9090: Prometheus"

env-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(GREEN)üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	@echo "$(YELLOW)OPENAI_API_KEY:$(NC) $(if $(OPENAI_API_KEY),‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω,‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)"
	@echo "$(YELLOW)NEO4J_URL:$(NC) $(if $(NEO4J_URL),‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω,‚ö†Ô∏è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω default)"
	@echo "$(YELLOW)POSTGRES_URL:$(NC) $(if $(POSTGRES_URL),‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω,‚ö†Ô∏è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω default)" 