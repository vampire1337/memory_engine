#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const os = require('os');

function getCursorConfigPath() {
  const platform = os.platform();
  const homeDir = os.homedir();
  
  switch (platform) {
    case 'win32':
      return path.join(homeDir, 'AppData', 'Roaming', 'Cursor', 'User', 'globalStorage', 'cursor.claude-desktop', 'claude_desktop_config.json');
    case 'darwin':
      return path.join(homeDir, 'Library', 'Application Support', 'Cursor', 'User', 'globalStorage', 'cursor.claude-desktop', 'claude_desktop_config.json');
    case 'linux':
      return path.join(homeDir, '.config', 'Cursor', 'User', 'globalStorage', 'cursor.claude-desktop', 'claude_desktop_config.json');
    default:
      throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}`);
  }
}

// –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è FastAPI-MCP —á–µ—Ä–µ–∑ SSE
const mcpConfig = {
  "mcpServers": {
    "fastapi-mem0-memory": {
      "transport": "sse",
      "url": "http://localhost:8000/mcp",
      "name": "FastAPI Mem0 Memory Server",
      "description": "–°—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –ø–∞–º—è—Ç–∏ —Å 11 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏"
    }
  }
};

function main() {
  console.log('üîß –ù–ê–°–¢–†–û–ô–ö–ê CURSOR MCP (SSE Transport)');
  console.log('='.repeat(50));
  
  try {
    const configPath = getCursorConfigPath();
    console.log(`üìÅ –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${configPath}`);
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const configDir = path.dirname(configPath);
    if (!fs.existsSync(configDir)) {
      fs.mkdirSync(configDir, { recursive: true });
    }
    
    let finalConfig = mcpConfig;
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if (fs.existsSync(configPath)) {
      console.log('üìã –ù–∞–π–¥–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è');
      
      // –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
      const backupPath = configPath + '.backup';
      fs.copyFileSync(configPath, backupPath);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: ${backupPath}`);
      
      try {
        const existingConfig = JSON.parse(fs.readFileSync(configPath, 'utf8'));
        finalConfig = { ...existingConfig };
        
        if (!finalConfig.mcpServers) {
          finalConfig.mcpServers = {};
        }
        
        finalConfig.mcpServers['fastapi-mem0-memory'] = mcpConfig.mcpServers['fastapi-mem0-memory'];
        
        console.log('üîÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã');
      } catch (error) {
        console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é');
        finalConfig = mcpConfig;
      }
    } else {
      console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    fs.writeFileSync(configPath, JSON.stringify(finalConfig, null, 2));
    
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor MCP –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
    console.log('');
    console.log('üìã –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:');
    console.log('   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: FastAPI Mem0 Memory Server');
    console.log('   ‚Ä¢ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: SSE (Server-Sent Events)');
    console.log('   ‚Ä¢ URL: http://localhost:8000/mcp');
    console.log('   ‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: 11 —Ñ—É–Ω–∫—Ü–∏–π –ø–∞–º—è—Ç–∏');
    console.log('');
    console.log('üöÄ –ß—Ç–æ –¥–∞–ª—å—à–µ:');
    console.log('   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run server');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:8000');
    console.log('   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor IDE');
    console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–∞–º—è—Ç–∏ –≤ Claude');
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ${error.message}`);
    console.log('');
    console.log('üîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ npx:');
    console.log('   –î–æ–±–∞–≤—å—Ç–µ –≤ Cursor config:');
    console.log('   "fastapi-mem0-memory": {');
    console.log('     "command": "npx",');
    console.log('     "args": ["mcp-remote", "http://localhost:8000/mcp"]');
    console.log('   }');
    process.exit(1);
  }
}

if (require.main === module) {
  main();
} 