# Unified Memory System - Windows PowerShell Launcher
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

param(
    [switch]$Clean,          # –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    [switch]$Monitoring,     # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
    [switch]$Minimal,        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    [switch]$DevMode,        # –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    [switch]$ForceRebuild,   # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±–µ–∑ –∫—ç—à–∞
    [switch]$Help            # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$ErrorColor = "Red"
$SuccessColor = "Green"
$WarningColor = "Yellow"
$InfoColor = "Cyan"

function Write-Status {
    param([string]$Message, [string]$Status = "INFO")
    
    switch ($Status) {
        "SUCCESS" { Write-Host "‚úÖ $Message" -ForegroundColor $SuccessColor }
        "ERROR"   { Write-Host "‚ùå $Message" -ForegroundColor $ErrorColor }
        "WARNING" { Write-Host "‚ö†Ô∏è $Message" -ForegroundColor $WarningColor }
        "INFO"    { Write-Host "‚ÑπÔ∏è $Message" -ForegroundColor $InfoColor }
        default   { Write-Host $Message }
    }
}

function Show-Help {
    Write-Host @"

üöÄ UNIFIED MEMORY SYSTEM - WINDOWS LAUNCHER

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
  .\–∑–∞–ø—É—Å–∫_windows.ps1 [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ü–ê–†–ê–ú–ï–¢–†–´:
  -Clean          –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ Docker –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
  -Monitoring     –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å Prometheus + Grafana –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
  -Minimal        –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Neo4j + Memory Server (–±—ã—Å—Ç—Ä–µ–µ)
  -DevMode        –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –∂–∏–≤—ã–º–∏ –ª–æ–≥–∞–º–∏
  -ForceRebuild   –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±–µ–∑ –∫—ç—à–∞ (–∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç embedding_dims)
  -Help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü–†–ò–ú–ï–†–´:
  .\–∑–∞–ø—É—Å–∫_windows.ps1                    # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫
  .\–∑–∞–ø—É—Å–∫_windows.ps1 -Clean             # –ó–∞–ø—É—Å–∫ —Å –æ—á–∏—Å—Ç–∫–æ–π
  .\–∑–∞–ø—É—Å–∫_windows.ps1 -Monitoring        # –ó–∞–ø—É—Å–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
  .\–∑–∞–ø—É—Å–∫_windows.ps1 -Minimal           # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  .\–∑–∞–ø—É—Å–∫_windows.ps1 -DevMode           # –†–∞–∑—Ä–∞–±–æ—Ç—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º
  .\–∑–∞–ø—É—Å–∫_windows.ps1 -ForceRebuild      # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ embedding_dims

"@ -ForegroundColor $InfoColor
    exit
}

if ($Help) { Show-Help }

Write-Host @"

==========================================
üöÄ UNIFIED MEMORY SYSTEM - LAUNCHER
==========================================

"@ -ForegroundColor $InfoColor

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Status "–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..." "INFO"
try {
    $dockerVersion = docker --version 2>$null
    if ($LASTEXITCODE -ne 0) { throw "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω" }
    Write-Status "Docker –Ω–∞–π–¥–µ–Ω: $dockerVersion" "SUCCESS"
} catch {
    Write-Status "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop" "ERROR"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
Write-Status "–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..." "INFO"
try {
    $composeVersion = docker-compose --version 2>$null
    if ($LASTEXITCODE -ne 0) { throw "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω" }
    Write-Status "Docker Compose –Ω–∞–π–¥–µ–Ω: $composeVersion" "SUCCESS"
} catch {
    Write-Status "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!" "ERROR"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
Write-Status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..." "INFO"
if (-not (Test-Path ".env")) {
    Write-Status "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ config.example.env..." "WARNING"
    Copy-Item "config.example.env" ".env"
    Write-Status "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env" "SUCCESS"
    Write-Host @"

üìù –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env!
   –û—Ç–∫—Ä–æ–π—Ç–µ .env –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏ —É–∫–∞–∂–∏—Ç–µ:
   - OPENAI_API_KEY=your_actual_api_key

"@ -ForegroundColor $WarningColor
    
    $response = Read-Host "–û—Ç–∫—Ä—ã—Ç—å .env –≤ –±–ª–æ–∫–Ω–æ—Ç–µ? (Y/n)"
    if ($response -ne "n" -and $response -ne "N") {
        notepad ".env"
        Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env"
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ –≤ .env
$envContent = Get-Content ".env" -ErrorAction SilentlyContinue
$apiKeyLine = $envContent | Where-Object { $_ -like "OPENAI_API_KEY=*" }
if ($apiKeyLine -like "*your_openai_api_key_here*" -or $apiKeyLine -like "*=*" -and $apiKeyLine.Split("=")[1].Length -lt 10) {
    Write-Status "‚ö†Ô∏è –ü–æ—Ö–æ–∂–µ, OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!" "WARNING"
    $response = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ API –∫–ª—é—á–∞ (y/N)"
    if ($response -ne "y" -and $response -ne "Y") {
        exit 1
    }
}

Write-Status "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞" "SUCCESS"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Status "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..." "INFO"
docker-compose -f docker-compose.unified.yml down 2>$null
Write-Status "–°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" "SUCCESS"

# –û—á–∏—Å—Ç–∫–∞ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞)
if ($Clean) {
    Write-Status "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ Docker..." "INFO"
    docker system prune -f 2>$null
    docker volume prune -f 2>$null
    Write-Status "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "SUCCESS"
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (–¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è embedding_dims)
if ($ForceRebuild) {
    Write-Status "–ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–ï–†–ï–°–ë–û–†–ö–ê –±–µ–∑ –∫—ç—à–∞..." "WARNING"
    Write-Status "–≠—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç –æ—à–∏–±–∫—É embedding_dims" "INFO"
    
    # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker
    docker stop $(docker ps -aq) 2>$null
    docker rm $(docker ps -aq) 2>$null
    docker rmi $(docker images -q) -f 2>$null
    docker volume rm $(docker volume ls -q) 2>$null
    docker builder prune -af
    
    Write-Status "–í—Å–µ Docker –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã" "SUCCESS"
    Write-Status "–ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –±–µ–∑ –∫—ç—à–∞..." "INFO"
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞
$composeCommand = "docker-compose -f docker-compose.unified.yml"

$buildArgs = if ($ForceRebuild) { " --build --no-cache" } else { " --build" }

if ($Monitoring) {
    Write-Status "–ó–∞–ø—É—Å–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º (Prometheus + Grafana)..." "INFO"
    $composeCommand += " --profile monitoring up -d$buildArgs"
} elseif ($Minimal) {
    Write-Status "–ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." "INFO"
    $composeCommand += " up -d neo4j postgres memory-server$buildArgs"
} elseif ($DevMode) {
    Write-Status "–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..." "INFO"
    $composeCommand += " up$buildArgs"
} else {
    Write-Status "–ó–∞–ø—É—Å–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." "INFO"
    $composeCommand += " up -d$buildArgs"
}

if ($ForceRebuild) {
    Write-Host "`n‚ö†Ô∏è –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–ï–†–ï–°–ë–û–†–ö–ê: –≠—Ç–æ –∑–∞–π–º–µ—Ç 5-10 –º–∏–Ω—É—Ç, –Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç –æ—à–∏–±–∫—É embedding_dims`n" -ForegroundColor $WarningColor
} else {
    Write-Host "`n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ...`n" -ForegroundColor $WarningColor
}

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
try {
    Invoke-Expression $composeCommand
    if ($LASTEXITCODE -ne 0) { throw "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker Compose" }
    Write-Status "–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..." "SUCCESS"
} catch {
    Write-Status "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.unified.yml logs" "ERROR"
    exit 1
}

if (-not $DevMode) {
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    Write-Status "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫)..." "INFO"
    Start-Sleep -Seconds 30

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    Write-Status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." "INFO"
    docker-compose -f docker-compose.unified.yml ps

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
    Write-Status "–ü—Ä–æ–≤–µ—Ä—è–µ–º Memory Server..." "INFO"
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:8051/health" -UseBasicParsing -TimeoutSec 10 -ErrorAction Stop
        Write-Status "Memory Server —Ä–∞–±–æ—Ç–∞–µ—Ç!" "SUCCESS"
    } catch {
        Write-Status "Memory Server –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –æ–∂–∏–¥–∞–µ–º –µ—â–µ 10 —Å–µ–∫—É–Ω–¥..." "WARNING"
        Start-Sleep -Seconds 10
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:8051/health" -UseBasicParsing -TimeoutSec 10 -ErrorAction Stop
            Write-Status "Memory Server —Ä–∞–±–æ—Ç–∞–µ—Ç!" "SUCCESS"
        } catch {
            Write-Status "Memory Server –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.unified.yml logs memory-server" "ERROR"
        }
    }

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    Write-Host @"

==========================================
üéâ –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê!
==========================================

üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:
"@ -ForegroundColor $SuccessColor

    Write-Host "   ‚Ä¢ Memory API:     " -NoNewline; Write-Host "http://localhost:8051/docs" -ForegroundColor $InfoColor
    Write-Host "   ‚Ä¢ Health Check:   " -NoNewline; Write-Host "http://localhost:8051/health" -ForegroundColor $InfoColor
    Write-Host "   ‚Ä¢ Neo4j Browser:  " -NoNewline; Write-Host "http://localhost:7474" -ForegroundColor $InfoColor
    
    if ($Monitoring) {
        Write-Host "   ‚Ä¢ Grafana:        " -NoNewline; Write-Host "http://localhost:3000" -ForegroundColor $InfoColor
        Write-Host "   ‚Ä¢ Prometheus:     " -NoNewline; Write-Host "http://localhost:9090" -ForegroundColor $InfoColor
    }

    Write-Host @"

üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:
   ‚Ä¢ curl -X POST http://localhost:8051/memory/save -H "Content-Type: application/json" -d '{"content":"–¢–µ—Å—Ç Windows","user_id":"test"}'
   ‚Ä¢ curl -X POST http://localhost:8051/memory/search -H "Content-Type: application/json" -d '{"query":"Windows","user_id":"test"}'

üõë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:
   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.unified.yml down
   ‚Ä¢ –õ–æ–≥–∏:      docker-compose -f docker-compose.unified.yml logs -f memory-server
   ‚Ä¢ –°—Ç–∞—Ç—É—Å:    docker-compose -f docker-compose.unified.yml ps

"@ -ForegroundColor $InfoColor

    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
    $response = Read-Host "–û—Ç–∫—Ä—ã—Ç—å Memory API –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (Y/n)"
    if ($response -ne "n" -and $response -ne "N") {
        Start-Process "http://localhost:8051/docs"
    }
} else {
    Write-Host @"

üîß –†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ö–ò
–õ–æ–≥–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.

"@ -ForegroundColor $WarningColor
} 