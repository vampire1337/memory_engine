[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-mem0"
version = "0.2.0"
description = "Advanced Memory Management Server with MCP, Mem0, Memgraph, Supabase, and Redis"
authors = [
    {name = "Claude Sonnet 4", email = "claude@anthropic.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"

# Основные зависимости
dependencies = [
    # Core MCP и Memory
    "mcp==1.10.0",
    "mem0ai==0.2.14", 
    
    # LLM и Embeddings
    "openai==1.56.2",
    "litellm==1.61.15",
    
    # FastAPI и веб-сервер
    "fastapi==0.115.6",
    "uvicorn[standard]==0.32.1",
    "pydantic==2.10.3",
    "pydantic-settings==2.6.1",
    
    # Database адаптеры
    "supabase==2.9.1",
    "neo4j==5.27.0",
    "memgraph==1.1.0",
    
    # Redis для кэширования и синхронизации
    "redis[hiredis]==5.2.1",
    "redis-om==0.3.2",
    "aioredis==2.0.1",
    "redisearch==2.1.1",
    
    # Async и Event handling
    "asyncio-mqtt==0.16.2",
    "celery[redis]==5.4.0",
    "kombu==5.4.2",
    
    # Data processing
    "pandas==2.2.3",
    "numpy==2.1.3",
    "scipy==1.14.1",
    
    # Vector operations
    "faiss-cpu==1.9.0",
    "qdrant-client==1.12.1",
    "chromadb==0.5.23",
    
    # HTTP и networking  
    "httpx==0.28.1",
    "requests==2.32.4",
    "aiohttp==3.12.14",
    
    # Utilities
    "python-dotenv==1.0.1",
    "click==8.1.8",
    "rich==13.9.4",
    "typer==0.14.0",
    
    # Logging и monitoring
    "structlog==24.4.0",
    "prometheus-client==0.21.0",
    "sentry-sdk[fastapi]==2.19.2",
    
    # Security
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    
    # Validation
    "jsonschema==4.23.0",
    "marshmallow==3.23.2"
]

[project.optional-dependencies]
# Redis расширения
redis = [
    "redis-py-cluster==2.1.3",
    "redis-sentinel==1.0.1",
    "redis-collections==0.13.0"
]

# Развертывание и продакшн
deployment = [
    "gunicorn==23.0.0",
    "docker==7.1.0",
    "kubernetes==31.0.0",
    "helm==3.16.2"
]

# Мониторинг и производительность
monitoring = [
    "grafana-api==1.0.3",
    "datadog==0.50.2",
    "newrelic==10.2.0",
    "elastic-apm==6.24.0"
]

# Разработка и тестирование
dev = [
    "pytest==8.3.4",
    "pytest-asyncio==0.25.0",
    "pytest-mock==3.14.0",
    "pytest-cov==6.0.0",
    "pytest-xdist==3.6.0",
    "pytest-benchmark==4.0.0",
    "pytest-redis==3.1.2",
    "httpx==0.28.1",
    "black==24.10.0",
    "isort==5.13.2",
    "ruff==0.8.4",
    "mypy==1.13.0",
    "pre-commit==4.0.1",
    "bandit==1.8.0"
]

# Документация
docs = [
    "mkdocs==1.6.1",
    "mkdocs-material==9.5.47",
    "mkdocs-mermaid2-plugin==1.1.1"
]

# Все для полной установки
all = ["mcp-mem0[redis,deployment,monitoring,dev,docs]"]

[project.urls]
Homepage = "https://github.com/heist1337/mcp-mem0"
Documentation = "https://github.com/heist1337/mcp-mem0/blob/main/README.md"
Repository = "https://github.com/heist1337/mcp-mem0"
"Bug Tracker" = "https://github.com/heist1337/mcp-mem0/issues"

[project.scripts]
mcp-mem0 = "src.unified_memory_server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

# UV конфигурация для быстрой разработки
[tool.uv]
dev-dependencies = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-redis>=3.1.2",
    "black>=24.10.0",
    "isort>=5.13.2",
    "ruff>=0.8.4",
    "mypy>=1.13.0"
]

# Линтинг и форматирование
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_mem0"]

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501", "N806", "N803"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

# Redis тестирование
redis_host = "localhost"
redis_port = 6379
redis_db = 1
